{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFforpartition"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ETLdataflow_Hash')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Sales_AfterSales_CRM_SCEQRY_TB",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "SecondAzureDataLakeStorageLinkServices",
								"type": "LinkedServiceReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "SecondAzureDataLakeStorageLinkServices",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EQRY_DLR_NO as string,",
						"          EQRY_ENQRY_NO as string,",
						"          EQRY_CORP_NO as string,",
						"          EQRY_CMPN_NO as string,",
						"          EQRY_DATE as date,",
						"          EQRY_SRC_CODE as string,",
						"          EQRY_STAT as short,",
						"          EQRY_TYPE as string,",
						"          EQRY_TEST_DRVR_DATE as string,",
						"          EQRY_FNCE_YN as boolean,",
						"          EQRY_FNCER_CODE as string,",
						"          EQRY_LOAN_AMT as double,",
						"          EQRY_TENOR_MNTHS as boolean,",
						"          EQRY_EXCHG_YN as boolean,",
						"          EQRY_EXCHG_MODEL_CODE as string,",
						"          EQRY_EXCHG_SRC_CODE as double,",
						"          EQRY_EXPCT_PRICE as double,",
						"          EQRY_QUOTD_PRICE as double,",
						"          EQRY_CLSE_DATE as date,",
						"          EQRY_CLSE_TYPE as double,",
						"          EQRY_CLSE_RMRKS as string,",
						"          EQRY_EMP_NO as string,",
						"          EQRY_CUST_NO as string,",
						"          EQRY_LISTD_CORP as string,",
						"          EQRY_CORP_NAME as string,",
						"          EQRY_RFRL_BY as string,",
						"          EQRY_CRTE_DTIME as timestamp,",
						"          EQRY_CRTE_EMP_NO as string,",
						"          EQRY_UPDT_DTIME as timestamp,",
						"          EQRY_UPDT_EMP_NO as string,",
						"          EQRY_EQFU_SEQ as double,",
						"          EQRY_UPDT_DATE as string,",
						"          EQRY_TEST_DRIVE_YN as boolean,",
						"          EQRY_SR_NUM as string,",
						"          EQRY_SR_TYPE as string,",
						"          EQRY_FLW_STATUS as boolean,",
						"          EQRY_ASSOCIATE_ID as double,",
						"          EQRY_RSO_ID as double,",
						"          EQRY_FUEL_TYPE as string,",
						"          EQRY_PRESENT_CAR_YN as boolean,",
						"          EQRY_MAKER_CODE as string,",
						"          EQRY_TD_VIN as string,",
						"          EQRY_CUST_BLOCK as boolean,",
						"          EQRY_BULK_SALE as boolean,",
						"          EQRY_P_MODL_YEAR as double,",
						"          EQRY_CLS_VAL as double,",
						"          EQRY_INCOM_GROUP as double,",
						"          EQRY_REFL_ID as string,",
						"          EQRY_REFL_PUNCH_DLR_NO as string,",
						"          EQRY_PLAN_DATE as string,",
						"          EQRY_ATIVT_NAME_CODE as string,",
						"          EQRY_ATIVT_LOC_CODE as string,",
						"          EQRY_NEWCAR_YN as boolean,",
						"          EQRY_FCALL_EMP_NO as string,",
						"          EQRY_APNT_DTIME as string,",
						"          VIST_DTIME as string,",
						"          LEAV_DTIME as string,",
						"          EQRY_CTGR_CODE as double,",
						"          EQRY_SUB_SRC_CODE as short,",
						"          EQRY_CLSE_GRP_TYPE as string,",
						"          EQRY_BUDG_TYPE as string,",
						"          EQRY_CERT_TYPE as string,",
						"          EQRY_UC_SC_EMP_NO as string,",
						"          EQRY_TDRIVE_RMRKS as string,",
						"          EQRY_VC_RMRKS as string,",
						"          EQRY_REQ_TYPE as string,",
						"          EQRY_EMAILSEND_YN as string,",
						"          EQRY_SRC_FLG as string,",
						"          EQRY_SR_NUM_REAL as string,",
						"          EQRY_ENG_TYP as string,",
						"          EQRY_TRNSM_TYP as string,",
						"          SOQ_TAG_YN as boolean,",
						"          EQRY_EVAL_YN as string,",
						"          EQRY_EXCH_DN as string,",
						"          EQRY_FINAL_BP as string,",
						"          EQRY_CAMPGN_NO as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 5,",
						"          EQRY_DLR_NO",
						"     )) ~> source1",
						"source1 select(mapColumn(",
						"          EQRY_DLR_NO,",
						"          EQRY_ENQRY_NO,",
						"          EQRY_CORP_NO,",
						"          EQRY_CMPN_NO,",
						"          EQRY_DATE,",
						"          EQRY_SRC_CODE,",
						"          EQRY_STAT,",
						"          EQRY_TYPE,",
						"          EQRY_FNCE_YN,",
						"          EQRY_FNCER_CODE,",
						"          EQRY_LOAN_AMT,",
						"          EQRY_TENOR_MNTHS,",
						"          EQRY_EXCHG_YN,",
						"          EQRY_EXCHG_MODEL_CODE,",
						"          EQRY_EXPCT_PRICE,",
						"          EQRY_QUOTD_PRICE,",
						"          EQRY_CLSE_DATE,",
						"          EQRY_CLSE_TYPE,",
						"          EQRY_CLSE_RMRKS,",
						"          EQRY_EMP_NO,",
						"          EQRY_CUST_NO,",
						"          EQRY_LISTD_CORP,",
						"          EQRY_CORP_NAME,",
						"          EQRY_CRTE_DTIME,",
						"          EQRY_CRTE_EMP_NO,",
						"          EQRY_UPDT_DTIME,",
						"          EQRY_UPDT_EMP_NO,",
						"          EQRY_EQFU_SEQ,",
						"          EQRY_SR_NUM,",
						"          EQRY_SR_TYPE,",
						"          EQRY_FLW_STATUS,",
						"          EQRY_ASSOCIATE_ID,",
						"          EQRY_RSO_ID,",
						"          EQRY_FUEL_TYPE,",
						"          EQRY_PRESENT_CAR_YN,",
						"          EQRY_MAKER_CODE,",
						"          EQRY_CUST_BLOCK,",
						"          EQRY_BULK_SALE,",
						"          EQRY_P_MODL_YEAR,",
						"          EQRY_CLS_VAL,",
						"          EQRY_NEWCAR_YN,",
						"          EQRY_FCALL_EMP_NO,",
						"          EQRY_CTGR_CODE,",
						"          EQRY_SUB_SRC_CODE,",
						"          EQRY_CLSE_GRP_TYPE,",
						"          EQRY_TDRIVE_RMRKS,",
						"          EQRY_VC_RMRKS,",
						"          EQRY_REQ_TYPE,",
						"          EQRY_SRC_FLG,",
						"          EQRY_SR_NUM_REAL,",
						"          EQRY_ENG_TYP,",
						"          EQRY_TRNSM_TYP",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delta',",
						"     fileSystem: 'hash',",
						"     mergeSchema: false,",
						"     autoCompact: false,",
						"     optimizedWrite: false,",
						"     vacuum: 0,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETLdataflow_Hash_Dynamic_Range')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Sales_AfterSales_CRM_SCEQRY_TB",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "SecondAzureDataLakeStorageLinkServices",
								"type": "LinkedServiceReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "SecondAzureDataLakeStorageLinkServices",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EQRY_DLR_NO as string,",
						"          EQRY_ENQRY_NO as string,",
						"          EQRY_CORP_NO as string,",
						"          EQRY_CMPN_NO as string,",
						"          EQRY_DATE as date,",
						"          EQRY_SRC_CODE as string,",
						"          EQRY_STAT as short,",
						"          EQRY_TYPE as string,",
						"          EQRY_TEST_DRVR_DATE as string,",
						"          EQRY_FNCE_YN as boolean,",
						"          EQRY_FNCER_CODE as string,",
						"          EQRY_LOAN_AMT as double,",
						"          EQRY_TENOR_MNTHS as boolean,",
						"          EQRY_EXCHG_YN as boolean,",
						"          EQRY_EXCHG_MODEL_CODE as string,",
						"          EQRY_EXCHG_SRC_CODE as double,",
						"          EQRY_EXPCT_PRICE as double,",
						"          EQRY_QUOTD_PRICE as double,",
						"          EQRY_CLSE_DATE as date,",
						"          EQRY_CLSE_TYPE as double,",
						"          EQRY_CLSE_RMRKS as string,",
						"          EQRY_EMP_NO as string,",
						"          EQRY_CUST_NO as string,",
						"          EQRY_LISTD_CORP as string,",
						"          EQRY_CORP_NAME as string,",
						"          EQRY_RFRL_BY as string,",
						"          EQRY_CRTE_DTIME as timestamp,",
						"          EQRY_CRTE_EMP_NO as string,",
						"          EQRY_UPDT_DTIME as timestamp,",
						"          EQRY_UPDT_EMP_NO as string,",
						"          EQRY_EQFU_SEQ as double,",
						"          EQRY_UPDT_DATE as string,",
						"          EQRY_TEST_DRIVE_YN as boolean,",
						"          EQRY_SR_NUM as string,",
						"          EQRY_SR_TYPE as string,",
						"          EQRY_FLW_STATUS as boolean,",
						"          EQRY_ASSOCIATE_ID as double,",
						"          EQRY_RSO_ID as double,",
						"          EQRY_FUEL_TYPE as string,",
						"          EQRY_PRESENT_CAR_YN as boolean,",
						"          EQRY_MAKER_CODE as string,",
						"          EQRY_TD_VIN as string,",
						"          EQRY_CUST_BLOCK as boolean,",
						"          EQRY_BULK_SALE as boolean,",
						"          EQRY_P_MODL_YEAR as double,",
						"          EQRY_CLS_VAL as double,",
						"          EQRY_INCOM_GROUP as double,",
						"          EQRY_REFL_ID as string,",
						"          EQRY_REFL_PUNCH_DLR_NO as string,",
						"          EQRY_PLAN_DATE as string,",
						"          EQRY_ATIVT_NAME_CODE as string,",
						"          EQRY_ATIVT_LOC_CODE as string,",
						"          EQRY_NEWCAR_YN as boolean,",
						"          EQRY_FCALL_EMP_NO as string,",
						"          EQRY_APNT_DTIME as string,",
						"          VIST_DTIME as string,",
						"          LEAV_DTIME as string,",
						"          EQRY_CTGR_CODE as double,",
						"          EQRY_SUB_SRC_CODE as short,",
						"          EQRY_CLSE_GRP_TYPE as string,",
						"          EQRY_BUDG_TYPE as string,",
						"          EQRY_CERT_TYPE as string,",
						"          EQRY_UC_SC_EMP_NO as string,",
						"          EQRY_TDRIVE_RMRKS as string,",
						"          EQRY_VC_RMRKS as string,",
						"          EQRY_REQ_TYPE as string,",
						"          EQRY_EMAILSEND_YN as string,",
						"          EQRY_SRC_FLG as string,",
						"          EQRY_SR_NUM_REAL as string,",
						"          EQRY_ENG_TYP as string,",
						"          EQRY_TRNSM_TYP as string,",
						"          SOQ_TAG_YN as boolean,",
						"          EQRY_EVAL_YN as string,",
						"          EQRY_EXCH_DN as string,",
						"          EQRY_FINAL_BP as string,",
						"          EQRY_CAMPGN_NO as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 5,",
						"          EQRY_DLR_NO",
						"     )) ~> source1",
						"source1 select(mapColumn(",
						"          EQRY_DLR_NO,",
						"          EQRY_ENQRY_NO,",
						"          EQRY_CORP_NO,",
						"          EQRY_CMPN_NO,",
						"          EQRY_DATE,",
						"          EQRY_SRC_CODE,",
						"          EQRY_STAT,",
						"          EQRY_TYPE,",
						"          EQRY_FNCE_YN,",
						"          EQRY_FNCER_CODE,",
						"          EQRY_LOAN_AMT,",
						"          EQRY_TENOR_MNTHS,",
						"          EQRY_EXCHG_YN,",
						"          EQRY_EXCHG_MODEL_CODE,",
						"          EQRY_EXPCT_PRICE,",
						"          EQRY_QUOTD_PRICE,",
						"          EQRY_CLSE_DATE,",
						"          EQRY_CLSE_TYPE,",
						"          EQRY_CLSE_RMRKS,",
						"          EQRY_EMP_NO,",
						"          EQRY_CUST_NO,",
						"          EQRY_LISTD_CORP,",
						"          EQRY_CORP_NAME,",
						"          EQRY_CRTE_DTIME,",
						"          EQRY_CRTE_EMP_NO,",
						"          EQRY_UPDT_DTIME,",
						"          EQRY_UPDT_EMP_NO,",
						"          EQRY_EQFU_SEQ,",
						"          EQRY_SR_NUM,",
						"          EQRY_SR_TYPE,",
						"          EQRY_FLW_STATUS,",
						"          EQRY_ASSOCIATE_ID,",
						"          EQRY_RSO_ID,",
						"          EQRY_FUEL_TYPE,",
						"          EQRY_PRESENT_CAR_YN,",
						"          EQRY_MAKER_CODE,",
						"          EQRY_CUST_BLOCK,",
						"          EQRY_BULK_SALE,",
						"          EQRY_P_MODL_YEAR,",
						"          EQRY_CLS_VAL,",
						"          EQRY_NEWCAR_YN,",
						"          EQRY_FCALL_EMP_NO,",
						"          EQRY_CTGR_CODE,",
						"          EQRY_SUB_SRC_CODE,",
						"          EQRY_CLSE_GRP_TYPE,",
						"          EQRY_TDRIVE_RMRKS,",
						"          EQRY_VC_RMRKS,",
						"          EQRY_REQ_TYPE,",
						"          EQRY_SRC_FLG,",
						"          EQRY_SR_NUM_REAL,",
						"          EQRY_ENG_TYP,",
						"          EQRY_TRNSM_TYP",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delta',",
						"     fileSystem: 'dynamicrange',",
						"     mergeSchema: false,",
						"     autoCompact: false,",
						"     optimizedWrite: false,",
						"     vacuum: 0,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETLdataflow_current_partitioning')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Sales_AfterSales_CRM_SCEQRY_TB",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "SecondAzureDataLakeStorageLinkServices",
								"type": "LinkedServiceReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "SecondAzureDataLakeStorageLinkServices",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EQRY_DLR_NO as string,",
						"          EQRY_ENQRY_NO as string,",
						"          EQRY_CORP_NO as string,",
						"          EQRY_CMPN_NO as string,",
						"          EQRY_DATE as date,",
						"          EQRY_SRC_CODE as string,",
						"          EQRY_STAT as short,",
						"          EQRY_TYPE as string,",
						"          EQRY_TEST_DRVR_DATE as string,",
						"          EQRY_FNCE_YN as boolean,",
						"          EQRY_FNCER_CODE as string,",
						"          EQRY_LOAN_AMT as double,",
						"          EQRY_TENOR_MNTHS as boolean,",
						"          EQRY_EXCHG_YN as boolean,",
						"          EQRY_EXCHG_MODEL_CODE as string,",
						"          EQRY_EXCHG_SRC_CODE as double,",
						"          EQRY_EXPCT_PRICE as double,",
						"          EQRY_QUOTD_PRICE as double,",
						"          EQRY_CLSE_DATE as date,",
						"          EQRY_CLSE_TYPE as double,",
						"          EQRY_CLSE_RMRKS as string,",
						"          EQRY_EMP_NO as string,",
						"          EQRY_CUST_NO as string,",
						"          EQRY_LISTD_CORP as string,",
						"          EQRY_CORP_NAME as string,",
						"          EQRY_RFRL_BY as string,",
						"          EQRY_CRTE_DTIME as timestamp,",
						"          EQRY_CRTE_EMP_NO as string,",
						"          EQRY_UPDT_DTIME as timestamp,",
						"          EQRY_UPDT_EMP_NO as string,",
						"          EQRY_EQFU_SEQ as double,",
						"          EQRY_UPDT_DATE as string,",
						"          EQRY_TEST_DRIVE_YN as boolean,",
						"          EQRY_SR_NUM as string,",
						"          EQRY_SR_TYPE as string,",
						"          EQRY_FLW_STATUS as boolean,",
						"          EQRY_ASSOCIATE_ID as double,",
						"          EQRY_RSO_ID as double,",
						"          EQRY_FUEL_TYPE as string,",
						"          EQRY_PRESENT_CAR_YN as boolean,",
						"          EQRY_MAKER_CODE as string,",
						"          EQRY_TD_VIN as string,",
						"          EQRY_CUST_BLOCK as boolean,",
						"          EQRY_BULK_SALE as boolean,",
						"          EQRY_P_MODL_YEAR as double,",
						"          EQRY_CLS_VAL as double,",
						"          EQRY_INCOM_GROUP as double,",
						"          EQRY_REFL_ID as string,",
						"          EQRY_REFL_PUNCH_DLR_NO as string,",
						"          EQRY_PLAN_DATE as string,",
						"          EQRY_ATIVT_NAME_CODE as string,",
						"          EQRY_ATIVT_LOC_CODE as string,",
						"          EQRY_NEWCAR_YN as boolean,",
						"          EQRY_FCALL_EMP_NO as string,",
						"          EQRY_APNT_DTIME as string,",
						"          VIST_DTIME as string,",
						"          LEAV_DTIME as string,",
						"          EQRY_CTGR_CODE as double,",
						"          EQRY_SUB_SRC_CODE as short,",
						"          EQRY_CLSE_GRP_TYPE as string,",
						"          EQRY_BUDG_TYPE as string,",
						"          EQRY_CERT_TYPE as string,",
						"          EQRY_UC_SC_EMP_NO as string,",
						"          EQRY_TDRIVE_RMRKS as string,",
						"          EQRY_VC_RMRKS as string,",
						"          EQRY_REQ_TYPE as string,",
						"          EQRY_EMAILSEND_YN as string,",
						"          EQRY_SRC_FLG as string,",
						"          EQRY_SR_NUM_REAL as string,",
						"          EQRY_ENG_TYP as string,",
						"          EQRY_TRNSM_TYP as string,",
						"          SOQ_TAG_YN as boolean,",
						"          EQRY_EVAL_YN as string,",
						"          EQRY_EXCH_DN as string,",
						"          EQRY_FINAL_BP as string,",
						"          EQRY_CAMPGN_NO as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          EQRY_DLR_NO,",
						"          EQRY_ENQRY_NO,",
						"          EQRY_CORP_NO,",
						"          EQRY_CMPN_NO,",
						"          EQRY_DATE,",
						"          EQRY_SRC_CODE,",
						"          EQRY_STAT,",
						"          EQRY_TYPE,",
						"          EQRY_FNCE_YN,",
						"          EQRY_FNCER_CODE,",
						"          EQRY_LOAN_AMT,",
						"          EQRY_TENOR_MNTHS,",
						"          EQRY_EXCHG_YN,",
						"          EQRY_EXCHG_MODEL_CODE,",
						"          EQRY_EXPCT_PRICE,",
						"          EQRY_QUOTD_PRICE,",
						"          EQRY_CLSE_DATE,",
						"          EQRY_CLSE_TYPE,",
						"          EQRY_CLSE_RMRKS,",
						"          EQRY_EMP_NO,",
						"          EQRY_CUST_NO,",
						"          EQRY_LISTD_CORP,",
						"          EQRY_CORP_NAME,",
						"          EQRY_CRTE_DTIME,",
						"          EQRY_CRTE_EMP_NO,",
						"          EQRY_UPDT_DTIME,",
						"          EQRY_UPDT_EMP_NO,",
						"          EQRY_EQFU_SEQ,",
						"          EQRY_SR_NUM,",
						"          EQRY_SR_TYPE,",
						"          EQRY_FLW_STATUS,",
						"          EQRY_ASSOCIATE_ID,",
						"          EQRY_RSO_ID,",
						"          EQRY_FUEL_TYPE,",
						"          EQRY_PRESENT_CAR_YN,",
						"          EQRY_MAKER_CODE,",
						"          EQRY_CUST_BLOCK,",
						"          EQRY_BULK_SALE,",
						"          EQRY_P_MODL_YEAR,",
						"          EQRY_CLS_VAL,",
						"          EQRY_NEWCAR_YN,",
						"          EQRY_FCALL_EMP_NO,",
						"          EQRY_CTGR_CODE,",
						"          EQRY_SUB_SRC_CODE,",
						"          EQRY_CLSE_GRP_TYPE,",
						"          EQRY_TDRIVE_RMRKS,",
						"          EQRY_VC_RMRKS,",
						"          EQRY_REQ_TYPE,",
						"          EQRY_SRC_FLG,",
						"          EQRY_SR_NUM_REAL,",
						"          EQRY_ENG_TYP,",
						"          EQRY_TRNSM_TYP",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delta',",
						"     fileSystem: 'currentpartitioning',",
						"     mergeSchema: false,",
						"     autoCompact: false,",
						"     optimizedWrite: false,",
						"     vacuum: 0,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETLdataflow_key')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Sales_AfterSales_CRM_SCEQRY_TB",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "SecondAzureDataLakeStorageLinkServices",
								"type": "LinkedServiceReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "SecondAzureDataLakeStorageLinkServices",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EQRY_DLR_NO as string,",
						"          EQRY_ENQRY_NO as string,",
						"          EQRY_CORP_NO as string,",
						"          EQRY_CMPN_NO as string,",
						"          EQRY_DATE as date,",
						"          EQRY_SRC_CODE as string,",
						"          EQRY_STAT as short,",
						"          EQRY_TYPE as string,",
						"          EQRY_TEST_DRVR_DATE as string,",
						"          EQRY_FNCE_YN as boolean,",
						"          EQRY_FNCER_CODE as string,",
						"          EQRY_LOAN_AMT as double,",
						"          EQRY_TENOR_MNTHS as boolean,",
						"          EQRY_EXCHG_YN as boolean,",
						"          EQRY_EXCHG_MODEL_CODE as string,",
						"          EQRY_EXCHG_SRC_CODE as double,",
						"          EQRY_EXPCT_PRICE as double,",
						"          EQRY_QUOTD_PRICE as double,",
						"          EQRY_CLSE_DATE as date,",
						"          EQRY_CLSE_TYPE as double,",
						"          EQRY_CLSE_RMRKS as string,",
						"          EQRY_EMP_NO as string,",
						"          EQRY_CUST_NO as string,",
						"          EQRY_LISTD_CORP as string,",
						"          EQRY_CORP_NAME as string,",
						"          EQRY_RFRL_BY as string,",
						"          EQRY_CRTE_DTIME as timestamp,",
						"          EQRY_CRTE_EMP_NO as string,",
						"          EQRY_UPDT_DTIME as timestamp,",
						"          EQRY_UPDT_EMP_NO as string,",
						"          EQRY_EQFU_SEQ as double,",
						"          EQRY_UPDT_DATE as string,",
						"          EQRY_TEST_DRIVE_YN as boolean,",
						"          EQRY_SR_NUM as string,",
						"          EQRY_SR_TYPE as string,",
						"          EQRY_FLW_STATUS as boolean,",
						"          EQRY_ASSOCIATE_ID as double,",
						"          EQRY_RSO_ID as double,",
						"          EQRY_FUEL_TYPE as string,",
						"          EQRY_PRESENT_CAR_YN as boolean,",
						"          EQRY_MAKER_CODE as string,",
						"          EQRY_TD_VIN as string,",
						"          EQRY_CUST_BLOCK as boolean,",
						"          EQRY_BULK_SALE as boolean,",
						"          EQRY_P_MODL_YEAR as double,",
						"          EQRY_CLS_VAL as double,",
						"          EQRY_INCOM_GROUP as double,",
						"          EQRY_REFL_ID as string,",
						"          EQRY_REFL_PUNCH_DLR_NO as string,",
						"          EQRY_PLAN_DATE as string,",
						"          EQRY_ATIVT_NAME_CODE as string,",
						"          EQRY_ATIVT_LOC_CODE as string,",
						"          EQRY_NEWCAR_YN as boolean,",
						"          EQRY_FCALL_EMP_NO as string,",
						"          EQRY_APNT_DTIME as string,",
						"          VIST_DTIME as string,",
						"          LEAV_DTIME as string,",
						"          EQRY_CTGR_CODE as double,",
						"          EQRY_SUB_SRC_CODE as short,",
						"          EQRY_CLSE_GRP_TYPE as string,",
						"          EQRY_BUDG_TYPE as string,",
						"          EQRY_CERT_TYPE as string,",
						"          EQRY_UC_SC_EMP_NO as string,",
						"          EQRY_TDRIVE_RMRKS as string,",
						"          EQRY_VC_RMRKS as string,",
						"          EQRY_REQ_TYPE as string,",
						"          EQRY_EMAILSEND_YN as string,",
						"          EQRY_SRC_FLG as string,",
						"          EQRY_SR_NUM_REAL as string,",
						"          EQRY_ENG_TYP as string,",
						"          EQRY_TRNSM_TYP as string,",
						"          SOQ_TAG_YN as boolean,",
						"          EQRY_EVAL_YN as string,",
						"          EQRY_EXCH_DN as string,",
						"          EQRY_FINAL_BP as string,",
						"          EQRY_CAMPGN_NO as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('key',",
						"          0,",
						"          EQRY_DLR_NO",
						"     )) ~> source1",
						"source1 select(mapColumn(",
						"          EQRY_DLR_NO,",
						"          EQRY_ENQRY_NO,",
						"          EQRY_CORP_NO,",
						"          EQRY_CMPN_NO,",
						"          EQRY_DATE,",
						"          EQRY_SRC_CODE,",
						"          EQRY_STAT,",
						"          EQRY_TYPE,",
						"          EQRY_FNCE_YN,",
						"          EQRY_FNCER_CODE,",
						"          EQRY_LOAN_AMT,",
						"          EQRY_TENOR_MNTHS,",
						"          EQRY_EXCHG_YN,",
						"          EQRY_EXCHG_MODEL_CODE,",
						"          EQRY_EXPCT_PRICE,",
						"          EQRY_QUOTD_PRICE,",
						"          EQRY_CLSE_DATE,",
						"          EQRY_CLSE_TYPE,",
						"          EQRY_CLSE_RMRKS,",
						"          EQRY_EMP_NO,",
						"          EQRY_CUST_NO,",
						"          EQRY_LISTD_CORP,",
						"          EQRY_CORP_NAME,",
						"          EQRY_CRTE_DTIME,",
						"          EQRY_CRTE_EMP_NO,",
						"          EQRY_UPDT_DTIME,",
						"          EQRY_UPDT_EMP_NO,",
						"          EQRY_EQFU_SEQ,",
						"          EQRY_SR_NUM,",
						"          EQRY_SR_TYPE,",
						"          EQRY_FLW_STATUS,",
						"          EQRY_ASSOCIATE_ID,",
						"          EQRY_RSO_ID,",
						"          EQRY_FUEL_TYPE,",
						"          EQRY_PRESENT_CAR_YN,",
						"          EQRY_MAKER_CODE,",
						"          EQRY_CUST_BLOCK,",
						"          EQRY_BULK_SALE,",
						"          EQRY_P_MODL_YEAR,",
						"          EQRY_CLS_VAL,",
						"          EQRY_NEWCAR_YN,",
						"          EQRY_FCALL_EMP_NO,",
						"          EQRY_CTGR_CODE,",
						"          EQRY_SUB_SRC_CODE,",
						"          EQRY_CLSE_GRP_TYPE,",
						"          EQRY_TDRIVE_RMRKS,",
						"          EQRY_VC_RMRKS,",
						"          EQRY_REQ_TYPE,",
						"          EQRY_SRC_FLG,",
						"          EQRY_SR_NUM_REAL,",
						"          EQRY_ENG_TYP,",
						"          EQRY_TRNSM_TYP",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delta',",
						"     fileSystem: 'dynamicrange',",
						"     mergeSchema: false,",
						"     autoCompact: false,",
						"     optimizedWrite: false,",
						"     vacuum: 0,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETLdataflow_round_robin')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Sales_AfterSales_CRM_SCEQRY_TB",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable2323",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "SecondAzureDataLakeStorageLinkServices",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EQRY_DLR_NO as string,",
						"          EQRY_ENQRY_NO as string,",
						"          EQRY_CORP_NO as string,",
						"          EQRY_CMPN_NO as string,",
						"          EQRY_DATE as string,",
						"          EQRY_SRC_CODE as string,",
						"          EQRY_STAT as string,",
						"          EQRY_TYPE as string,",
						"          EQRY_TEST_DRVR_DATE as string,",
						"          EQRY_FNCE_YN as string,",
						"          EQRY_FNCER_CODE as string,",
						"          EQRY_LOAN_AMT as string,",
						"          EQRY_TENOR_MNTHS as string,",
						"          EQRY_EXCHG_YN as string,",
						"          EQRY_EXCHG_MODEL_CODE as string,",
						"          EQRY_EXCHG_SRC_CODE as string,",
						"          EQRY_EXPCT_PRICE as string,",
						"          EQRY_QUOTD_PRICE as string,",
						"          EQRY_CLSE_DATE as string,",
						"          EQRY_CLSE_TYPE as string,",
						"          EQRY_CLSE_RMRKS as string,",
						"          EQRY_EMP_NO as string,",
						"          EQRY_CUST_NO as string,",
						"          EQRY_LISTD_CORP as string,",
						"          EQRY_CORP_NAME as string,",
						"          EQRY_RFRL_BY as string,",
						"          EQRY_CRTE_DTIME as string,",
						"          EQRY_CRTE_EMP_NO as string,",
						"          EQRY_UPDT_DTIME as string,",
						"          EQRY_UPDT_EMP_NO as string,",
						"          EQRY_EQFU_SEQ as string,",
						"          EQRY_UPDT_DATE as string,",
						"          EQRY_TEST_DRIVE_YN as string,",
						"          EQRY_SR_NUM as string,",
						"          EQRY_SR_TYPE as string,",
						"          EQRY_FLW_STATUS as string,",
						"          EQRY_ASSOCIATE_ID as string,",
						"          EQRY_RSO_ID as string,",
						"          EQRY_FUEL_TYPE as string,",
						"          EQRY_PRESENT_CAR_YN as string,",
						"          EQRY_MAKER_CODE as string,",
						"          EQRY_TD_VIN as string,",
						"          EQRY_CUST_BLOCK as string,",
						"          EQRY_BULK_SALE as string,",
						"          EQRY_P_MODL_YEAR as string,",
						"          EQRY_CLS_VAL as string,",
						"          EQRY_INCOM_GROUP as string,",
						"          EQRY_REFL_ID as string,",
						"          EQRY_REFL_PUNCH_DLR_NO as string,",
						"          EQRY_PLAN_DATE as string,",
						"          EQRY_ATIVT_NAME_CODE as string,",
						"          EQRY_ATIVT_LOC_CODE as string,",
						"          EQRY_NEWCAR_YN as string,",
						"          EQRY_FCALL_EMP_NO as string,",
						"          EQRY_APNT_DTIME as string,",
						"          VIST_DTIME as string,",
						"          LEAV_DTIME as string,",
						"          EQRY_CTGR_CODE as string,",
						"          EQRY_SUB_SRC_CODE as string,",
						"          EQRY_CLSE_GRP_TYPE as string,",
						"          EQRY_BUDG_TYPE as string,",
						"          EQRY_CERT_TYPE as string,",
						"          EQRY_UC_SC_EMP_NO as string,",
						"          EQRY_TDRIVE_RMRKS as string,",
						"          EQRY_VC_RMRKS as string,",
						"          EQRY_REQ_TYPE as string,",
						"          EQRY_EMAILSEND_YN as string,",
						"          EQRY_SRC_FLG as string,",
						"          EQRY_SR_NUM_REAL as string,",
						"          EQRY_ENG_TYP as string,",
						"          EQRY_TRNSM_TYP as string,",
						"          SOQ_TAG_YN as string,",
						"          EQRY_EVAL_YN as string,",
						"          EQRY_EXCH_DN as string,",
						"          EQRY_FINAL_BP as string,",
						"          EQRY_CAMPGN_NO as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('roundRobin', 5)) ~> source1",
						"source1 select(mapColumn(",
						"          EQRY_DLR_NO,",
						"          EQRY_ENQRY_NO,",
						"          EQRY_CORP_NO,",
						"          EQRY_CMPN_NO,",
						"          EQRY_DATE,",
						"          EQRY_SRC_CODE,",
						"          EQRY_STAT,",
						"          EQRY_TYPE,",
						"          EQRY_FNCE_YN,",
						"          EQRY_FNCER_CODE,",
						"          EQRY_LOAN_AMT,",
						"          EQRY_TENOR_MNTHS,",
						"          EQRY_EXCHG_YN,",
						"          EQRY_EXCHG_MODEL_CODE,",
						"          EQRY_EXPCT_PRICE,",
						"          EQRY_QUOTD_PRICE,",
						"          EQRY_CLSE_DATE,",
						"          EQRY_CLSE_TYPE,",
						"          EQRY_CLSE_RMRKS,",
						"          EQRY_EMP_NO,",
						"          EQRY_CUST_NO,",
						"          EQRY_LISTD_CORP,",
						"          EQRY_CORP_NAME,",
						"          EQRY_CRTE_DTIME,",
						"          EQRY_CRTE_EMP_NO,",
						"          EQRY_UPDT_DTIME,",
						"          EQRY_UPDT_EMP_NO,",
						"          EQRY_EQFU_SEQ,",
						"          EQRY_SR_NUM,",
						"          EQRY_SR_TYPE,",
						"          EQRY_FLW_STATUS,",
						"          EQRY_ASSOCIATE_ID,",
						"          EQRY_RSO_ID,",
						"          EQRY_FUEL_TYPE,",
						"          EQRY_PRESENT_CAR_YN,",
						"          EQRY_MAKER_CODE,",
						"          EQRY_CUST_BLOCK,",
						"          EQRY_BULK_SALE,",
						"          EQRY_P_MODL_YEAR,",
						"          EQRY_CLS_VAL,",
						"          EQRY_NEWCAR_YN,",
						"          EQRY_FCALL_EMP_NO,",
						"          EQRY_CTGR_CODE,",
						"          EQRY_SUB_SRC_CODE,",
						"          EQRY_CLSE_GRP_TYPE,",
						"          EQRY_TDRIVE_RMRKS,",
						"          EQRY_VC_RMRKS,",
						"          EQRY_REQ_TYPE,",
						"          EQRY_SRC_FLG,",
						"          EQRY_SR_NUM_REAL,",
						"          EQRY_ENG_TYP,",
						"          EQRY_TRNSM_TYP",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETLdataflow_trials')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Sales_AfterSales_CRM_SCEQRY_TB",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "SecondAzureDataLakeStorageLinkServices",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EQRY_DLR_NO as string,",
						"          EQRY_ENQRY_NO as string,",
						"          EQRY_CORP_NO as string,",
						"          EQRY_CMPN_NO as string,",
						"          EQRY_DATE as string,",
						"          EQRY_SRC_CODE as string,",
						"          EQRY_STAT as string,",
						"          EQRY_TYPE as string,",
						"          EQRY_TEST_DRVR_DATE as string,",
						"          EQRY_FNCE_YN as string,",
						"          EQRY_FNCER_CODE as string,",
						"          EQRY_LOAN_AMT as string,",
						"          EQRY_TENOR_MNTHS as string,",
						"          EQRY_EXCHG_YN as string,",
						"          EQRY_EXCHG_MODEL_CODE as string,",
						"          EQRY_EXCHG_SRC_CODE as string,",
						"          EQRY_EXPCT_PRICE as string,",
						"          EQRY_QUOTD_PRICE as string,",
						"          EQRY_CLSE_DATE as string,",
						"          EQRY_CLSE_TYPE as string,",
						"          EQRY_CLSE_RMRKS as string,",
						"          EQRY_EMP_NO as string,",
						"          EQRY_CUST_NO as string,",
						"          EQRY_LISTD_CORP as string,",
						"          EQRY_CORP_NAME as string,",
						"          EQRY_RFRL_BY as string,",
						"          EQRY_CRTE_DTIME as string,",
						"          EQRY_CRTE_EMP_NO as string,",
						"          EQRY_UPDT_DTIME as string,",
						"          EQRY_UPDT_EMP_NO as string,",
						"          EQRY_EQFU_SEQ as string,",
						"          EQRY_UPDT_DATE as string,",
						"          EQRY_TEST_DRIVE_YN as string,",
						"          EQRY_SR_NUM as string,",
						"          EQRY_SR_TYPE as string,",
						"          EQRY_FLW_STATUS as string,",
						"          EQRY_ASSOCIATE_ID as string,",
						"          EQRY_RSO_ID as string,",
						"          EQRY_FUEL_TYPE as string,",
						"          EQRY_PRESENT_CAR_YN as string,",
						"          EQRY_MAKER_CODE as string,",
						"          EQRY_TD_VIN as string,",
						"          EQRY_CUST_BLOCK as string,",
						"          EQRY_BULK_SALE as string,",
						"          EQRY_P_MODL_YEAR as string,",
						"          EQRY_CLS_VAL as string,",
						"          EQRY_INCOM_GROUP as string,",
						"          EQRY_REFL_ID as string,",
						"          EQRY_REFL_PUNCH_DLR_NO as string,",
						"          EQRY_PLAN_DATE as string,",
						"          EQRY_ATIVT_NAME_CODE as string,",
						"          EQRY_ATIVT_LOC_CODE as string,",
						"          EQRY_NEWCAR_YN as string,",
						"          EQRY_FCALL_EMP_NO as string,",
						"          EQRY_APNT_DTIME as string,",
						"          VIST_DTIME as string,",
						"          LEAV_DTIME as string,",
						"          EQRY_CTGR_CODE as string,",
						"          EQRY_SUB_SRC_CODE as string,",
						"          EQRY_CLSE_GRP_TYPE as string,",
						"          EQRY_BUDG_TYPE as string,",
						"          EQRY_CERT_TYPE as string,",
						"          EQRY_UC_SC_EMP_NO as string,",
						"          EQRY_TDRIVE_RMRKS as string,",
						"          EQRY_VC_RMRKS as string,",
						"          EQRY_REQ_TYPE as string,",
						"          EQRY_EMAILSEND_YN as string,",
						"          EQRY_SRC_FLG as string,",
						"          EQRY_SR_NUM_REAL as string,",
						"          EQRY_ENG_TYP as string,",
						"          EQRY_TRNSM_TYP as string,",
						"          SOQ_TAG_YN as string,",
						"          EQRY_EVAL_YN as string,",
						"          EQRY_EXCH_DN as string,",
						"          EQRY_FINAL_BP as string,",
						"          EQRY_CAMPGN_NO as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('roundRobin', 5)) ~> source1",
						"source1 select(mapColumn(",
						"          EQRY_DLR_NO,",
						"          EQRY_ENQRY_NO,",
						"          EQRY_CORP_NO,",
						"          EQRY_CMPN_NO,",
						"          EQRY_DATE,",
						"          EQRY_SRC_CODE,",
						"          EQRY_STAT,",
						"          EQRY_TYPE,",
						"          EQRY_FNCE_YN,",
						"          EQRY_FNCER_CODE,",
						"          EQRY_LOAN_AMT,",
						"          EQRY_TENOR_MNTHS,",
						"          EQRY_EXCHG_YN,",
						"          EQRY_EXCHG_MODEL_CODE,",
						"          EQRY_EXPCT_PRICE,",
						"          EQRY_QUOTD_PRICE,",
						"          EQRY_CLSE_DATE,",
						"          EQRY_CLSE_TYPE,",
						"          EQRY_CLSE_RMRKS,",
						"          EQRY_EMP_NO,",
						"          EQRY_CUST_NO,",
						"          EQRY_LISTD_CORP,",
						"          EQRY_CORP_NAME,",
						"          EQRY_CRTE_DTIME,",
						"          EQRY_CRTE_EMP_NO,",
						"          EQRY_UPDT_DTIME,",
						"          EQRY_UPDT_EMP_NO,",
						"          EQRY_EQFU_SEQ,",
						"          EQRY_SR_NUM,",
						"          EQRY_SR_TYPE,",
						"          EQRY_FLW_STATUS,",
						"          EQRY_ASSOCIATE_ID,",
						"          EQRY_RSO_ID,",
						"          EQRY_FUEL_TYPE,",
						"          EQRY_PRESENT_CAR_YN,",
						"          EQRY_MAKER_CODE,",
						"          EQRY_CUST_BLOCK,",
						"          EQRY_BULK_SALE,",
						"          EQRY_P_MODL_YEAR,",
						"          EQRY_CLS_VAL,",
						"          EQRY_NEWCAR_YN,",
						"          EQRY_FCALL_EMP_NO,",
						"          EQRY_CTGR_CODE,",
						"          EQRY_SUB_SRC_CODE,",
						"          EQRY_CLSE_GRP_TYPE,",
						"          EQRY_TDRIVE_RMRKS,",
						"          EQRY_VC_RMRKS,",
						"          EQRY_REQ_TYPE,",
						"          EQRY_SRC_FLG,",
						"          EQRY_SR_NUM_REAL,",
						"          EQRY_ENG_TYP,",
						"          EQRY_TRNSM_TYP",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          EQRY_DLR_NO as string,",
						"          EQRY_ENQRY_NO as string,",
						"          EQRY_CORP_NO as string,",
						"          EQRY_CMPN_NO as string,",
						"          EQRY_DATE as string,",
						"          EQRY_SRC_CODE as string,",
						"          EQRY_STAT as string,",
						"          EQRY_TYPE as string,",
						"          EQRY_TEST_DRVR_DATE as string,",
						"          EQRY_FNCE_YN as string,",
						"          EQRY_FNCER_CODE as string,",
						"          EQRY_LOAN_AMT as string,",
						"          EQRY_TENOR_MNTHS as string,",
						"          EQRY_EXCHG_YN as string,",
						"          EQRY_EXCHG_MODEL_CODE as string,",
						"          EQRY_EXCHG_SRC_CODE as string,",
						"          EQRY_EXPCT_PRICE as string,",
						"          EQRY_QUOTD_PRICE as string,",
						"          EQRY_CLSE_DATE as string,",
						"          EQRY_CLSE_TYPE as string,",
						"          EQRY_CLSE_RMRKS as string,",
						"          EQRY_EMP_NO as string,",
						"          EQRY_CUST_NO as string,",
						"          EQRY_LISTD_CORP as string,",
						"          EQRY_CORP_NAME as string,",
						"          EQRY_RFRL_BY as string,",
						"          EQRY_CRTE_DTIME as string,",
						"          EQRY_CRTE_EMP_NO as string,",
						"          EQRY_UPDT_DTIME as string,",
						"          EQRY_UPDT_EMP_NO as string,",
						"          EQRY_EQFU_SEQ as string,",
						"          EQRY_UPDT_DATE as string,",
						"          EQRY_TEST_DRIVE_YN as string,",
						"          EQRY_SR_NUM as string,",
						"          EQRY_SR_TYPE as string,",
						"          EQRY_FLW_STATUS as string,",
						"          EQRY_ASSOCIATE_ID as string,",
						"          EQRY_RSO_ID as string,",
						"          EQRY_FUEL_TYPE as string,",
						"          EQRY_PRESENT_CAR_YN as string,",
						"          EQRY_MAKER_CODE as string,",
						"          EQRY_TD_VIN as string,",
						"          EQRY_CUST_BLOCK as string,",
						"          EQRY_BULK_SALE as string,",
						"          EQRY_P_MODL_YEAR as string,",
						"          EQRY_CLS_VAL as string,",
						"          EQRY_INCOM_GROUP as string,",
						"          EQRY_REFL_ID as string,",
						"          EQRY_REFL_PUNCH_DLR_NO as string,",
						"          EQRY_PLAN_DATE as string,",
						"          EQRY_ATIVT_NAME_CODE as string,",
						"          EQRY_ATIVT_LOC_CODE as string,",
						"          EQRY_NEWCAR_YN as string,",
						"          EQRY_FCALL_EMP_NO as string,",
						"          EQRY_APNT_DTIME as string,",
						"          VIST_DTIME as string,",
						"          LEAV_DTIME as string,",
						"          EQRY_CTGR_CODE as string,",
						"          EQRY_SUB_SRC_CODE as string,",
						"          EQRY_CLSE_GRP_TYPE as string,",
						"          EQRY_BUDG_TYPE as string,",
						"          EQRY_CERT_TYPE as string,",
						"          EQRY_UC_SC_EMP_NO as string,",
						"          EQRY_TDRIVE_RMRKS as string,",
						"          EQRY_VC_RMRKS as string,",
						"          EQRY_REQ_TYPE as string,",
						"          EQRY_EMAILSEND_YN as string,",
						"          EQRY_SRC_FLG as string,",
						"          EQRY_SR_NUM_REAL as string,",
						"          EQRY_ENG_TYP as string,",
						"          EQRY_TRNSM_TYP as string,",
						"          SOQ_TAG_YN as string,",
						"          EQRY_EVAL_YN as string,",
						"          EQRY_EXCH_DN as string,",
						"          EQRY_FINAL_BP as string,",
						"          EQRY_CAMPGN_NO as string",
						"     ),",
						"     partitionFileNames:['Sales_AfterSales_CRM.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Sales_AfterSales_CRM_SCEQRY_TB",
								"type": "DatasetReference"
							},
							"name": "SalesAfterSalesCRMSCEQRY"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "RoundRobin",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "ADLSGen2LinkServices",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          EQRY_DLR_NO as string,",
						"          EQRY_ENQRY_NO as string,",
						"          EQRY_CORP_NO as string,",
						"          EQRY_CMPN_NO as string,",
						"          EQRY_DATE as string,",
						"          EQRY_SRC_CODE as string,",
						"          EQRY_STAT as string,",
						"          EQRY_TYPE as string,",
						"          EQRY_TEST_DRVR_DATE as string,",
						"          EQRY_FNCE_YN as string,",
						"          EQRY_FNCER_CODE as string,",
						"          EQRY_LOAN_AMT as string,",
						"          EQRY_TENOR_MNTHS as string,",
						"          EQRY_EXCHG_YN as string,",
						"          EQRY_EXCHG_MODEL_CODE as string,",
						"          EQRY_EXCHG_SRC_CODE as string,",
						"          EQRY_EXPCT_PRICE as string,",
						"          EQRY_QUOTD_PRICE as string,",
						"          EQRY_CLSE_DATE as string,",
						"          EQRY_CLSE_TYPE as string,",
						"          EQRY_CLSE_RMRKS as string,",
						"          EQRY_EMP_NO as string,",
						"          EQRY_CUST_NO as string,",
						"          EQRY_LISTD_CORP as string,",
						"          EQRY_CORP_NAME as string,",
						"          EQRY_RFRL_BY as string,",
						"          EQRY_CRTE_DTIME as string,",
						"          EQRY_CRTE_EMP_NO as string,",
						"          EQRY_UPDT_DTIME as string,",
						"          EQRY_UPDT_EMP_NO as string,",
						"          EQRY_EQFU_SEQ as string,",
						"          EQRY_UPDT_DATE as string,",
						"          EQRY_TEST_DRIVE_YN as string,",
						"          EQRY_SR_NUM as string,",
						"          EQRY_SR_TYPE as string,",
						"          EQRY_FLW_STATUS as string,",
						"          EQRY_ASSOCIATE_ID as string,",
						"          EQRY_RSO_ID as string,",
						"          EQRY_FUEL_TYPE as string,",
						"          EQRY_PRESENT_CAR_YN as string,",
						"          EQRY_MAKER_CODE as string,",
						"          EQRY_TD_VIN as string,",
						"          EQRY_CUST_BLOCK as string,",
						"          EQRY_BULK_SALE as string,",
						"          EQRY_P_MODL_YEAR as string,",
						"          EQRY_CLS_VAL as string,",
						"          EQRY_INCOM_GROUP as string,",
						"          EQRY_REFL_ID as string,",
						"          EQRY_REFL_PUNCH_DLR_NO as string,",
						"          EQRY_PLAN_DATE as string,",
						"          EQRY_ATIVT_NAME_CODE as string,",
						"          EQRY_ATIVT_LOC_CODE as string,",
						"          EQRY_NEWCAR_YN as string,",
						"          EQRY_FCALL_EMP_NO as string,",
						"          EQRY_APNT_DTIME as string,",
						"          VIST_DTIME as string,",
						"          LEAV_DTIME as string,",
						"          EQRY_CTGR_CODE as string,",
						"          EQRY_SUB_SRC_CODE as string,",
						"          EQRY_CLSE_GRP_TYPE as string,",
						"          EQRY_BUDG_TYPE as string,",
						"          EQRY_CERT_TYPE as string,",
						"          EQRY_UC_SC_EMP_NO as string,",
						"          EQRY_TDRIVE_RMRKS as string,",
						"          EQRY_VC_RMRKS as string,",
						"          EQRY_REQ_TYPE as string,",
						"          EQRY_EMAILSEND_YN as string,",
						"          EQRY_SRC_FLG as string,",
						"          EQRY_SR_NUM_REAL as string,",
						"          EQRY_ENG_TYP as string,",
						"          EQRY_TRNSM_TYP as string,",
						"          SOQ_TAG_YN as string,",
						"          EQRY_EVAL_YN as string,",
						"          EQRY_EXCH_DN as string,",
						"          EQRY_FINAL_BP as string,",
						"          EQRY_CAMPGN_NO as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('key',",
						"          0,",
						"          EQRY_ENQRY_NO",
						"     )) ~> SalesAfterSalesCRMSCEQRY",
						"SalesAfterSalesCRMSCEQRY sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('key',",
						"          0,",
						"          EQRY_ENQRY_NO",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "SecondAzureDataLakeStorageLinkServices",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable2323",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "SecondAzureDataLakeStorageLinkServices",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          EQRY_DLR_NO as string,",
						"          EQRY_ENQRY_NO as string,",
						"          EQRY_CORP_NO as string,",
						"          EQRY_CMPN_NO as string,",
						"          EQRY_DATE as date,",
						"          EQRY_SRC_CODE as string,",
						"          EQRY_STAT as short,",
						"          EQRY_TYPE as string,",
						"          EQRY_FNCE_YN as boolean,",
						"          EQRY_FNCER_CODE as string,",
						"          EQRY_LOAN_AMT as double,",
						"          EQRY_TENOR_MNTHS as boolean,",
						"          EQRY_EXCHG_YN as boolean,",
						"          EQRY_EXCHG_MODEL_CODE as string,",
						"          EQRY_EXPCT_PRICE as double,",
						"          EQRY_QUOTD_PRICE as double,",
						"          EQRY_CLSE_DATE as date,",
						"          EQRY_CLSE_TYPE as double,",
						"          EQRY_CLSE_RMRKS as string,",
						"          EQRY_EMP_NO as string,",
						"          EQRY_CUST_NO as string,",
						"          EQRY_LISTD_CORP as string,",
						"          EQRY_CORP_NAME as string,",
						"          EQRY_CRTE_DTIME as timestamp,",
						"          EQRY_CRTE_EMP_NO as string,",
						"          EQRY_UPDT_DTIME as timestamp,",
						"          EQRY_UPDT_EMP_NO as string,",
						"          EQRY_EQFU_SEQ as double,",
						"          EQRY_SR_NUM as string,",
						"          EQRY_SR_TYPE as string,",
						"          EQRY_FLW_STATUS as boolean,",
						"          EQRY_ASSOCIATE_ID as double,",
						"          EQRY_RSO_ID as double,",
						"          EQRY_FUEL_TYPE as string,",
						"          EQRY_PRESENT_CAR_YN as boolean,",
						"          EQRY_MAKER_CODE as string,",
						"          EQRY_CUST_BLOCK as boolean,",
						"          EQRY_BULK_SALE as boolean,",
						"          EQRY_P_MODL_YEAR as double,",
						"          EQRY_CLS_VAL as double,",
						"          EQRY_NEWCAR_YN as boolean,",
						"          EQRY_FCALL_EMP_NO as string,",
						"          EQRY_CTGR_CODE as double,",
						"          EQRY_SUB_SRC_CODE as short,",
						"          EQRY_CLSE_GRP_TYPE as string,",
						"          EQRY_TDRIVE_RMRKS as string,",
						"          EQRY_VC_RMRKS as string,",
						"          EQRY_REQ_TYPE as string,",
						"          EQRY_SRC_FLG as string,",
						"          EQRY_SR_NUM_REAL as string,",
						"          EQRY_ENG_TYP as string,",
						"          EQRY_TRNSM_TYP as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: true,",
						"     format: 'delta',",
						"     fileSystem: 'deltaformat') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow3')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "SecondAzureDataLakeStorageLinkServices",
								"type": "LinkedServiceReference"
							},
							"name": "SalesAftersales"
						},
						{
							"linkedService": {
								"referenceName": "SecondAzureDataLakeStorageLinkServices",
								"type": "LinkedServiceReference"
							},
							"name": "salesCRM"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTableFinalDataDump",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "join1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EQRY_DLR_NO as string,",
						"          EQRY_ENQRY_NO as string,",
						"          EQRY_CORP_NO as string,",
						"          EQRY_CMPN_NO as string,",
						"          EQRY_DATE as date,",
						"          EQRY_SRC_CODE as string,",
						"          EQRY_STAT as short,",
						"          EQRY_TYPE as string,",
						"          EQRY_FNCE_YN as boolean,",
						"          EQRY_FNCER_CODE as string,",
						"          EQRY_LOAN_AMT as double,",
						"          EQRY_TENOR_MNTHS as boolean,",
						"          EQRY_EXCHG_YN as boolean,",
						"          EQRY_EXCHG_MODEL_CODE as string,",
						"          EQRY_EXPCT_PRICE as double,",
						"          EQRY_QUOTD_PRICE as double,",
						"          EQRY_CLSE_DATE as date,",
						"          EQRY_CLSE_TYPE as double,",
						"          EQRY_CLSE_RMRKS as string,",
						"          EQRY_EMP_NO as string,",
						"          EQRY_CUST_NO as string,",
						"          EQRY_LISTD_CORP as string,",
						"          EQRY_CORP_NAME as string,",
						"          EQRY_CRTE_DTIME as timestamp,",
						"          EQRY_CRTE_EMP_NO as string,",
						"          EQRY_UPDT_DTIME as timestamp,",
						"          EQRY_UPDT_EMP_NO as string,",
						"          EQRY_EQFU_SEQ as double,",
						"          EQRY_SR_NUM as string,",
						"          EQRY_SR_TYPE as string,",
						"          EQRY_FLW_STATUS as boolean,",
						"          EQRY_ASSOCIATE_ID as double,",
						"          EQRY_RSO_ID as double,",
						"          EQRY_FUEL_TYPE as string,",
						"          EQRY_PRESENT_CAR_YN as boolean,",
						"          EQRY_MAKER_CODE as string,",
						"          EQRY_CUST_BLOCK as boolean,",
						"          EQRY_BULK_SALE as boolean,",
						"          EQRY_P_MODL_YEAR as double,",
						"          EQRY_CLS_VAL as double,",
						"          EQRY_NEWCAR_YN as boolean,",
						"          EQRY_FCALL_EMP_NO as string,",
						"          EQRY_CTGR_CODE as double,",
						"          EQRY_SUB_SRC_CODE as short,",
						"          EQRY_CLSE_GRP_TYPE as string,",
						"          EQRY_TDRIVE_RMRKS as string,",
						"          EQRY_VC_RMRKS as string,",
						"          EQRY_REQ_TYPE as string,",
						"          EQRY_SRC_FLG as string,",
						"          EQRY_SR_NUM_REAL as string,",
						"          EQRY_ENG_TYP as string,",
						"          EQRY_TRNSM_TYP as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delta',",
						"     fileSystem: 'currentpartitioning') ~> SalesAftersales",
						"source(output(",
						"          EQCR_DLR_NO as string,",
						"          EQCR_ENQRY_NO as string,",
						"          EQCR_SEQ as boolean,",
						"          EQCR_CORP_NO as string,",
						"          EQCR_CMPN_NO as string,",
						"          EQCR_MODEL_CODE as string,",
						"          EQCR_VRNT_CODE as double,",
						"          EQCR_COLOR_CODE as string,",
						"          EQCR_QTY as boolean,",
						"          EQCR_CRTE_DTIME as timestamp,",
						"          EQCR_CRTE_EMP_NO as string,",
						"          EQCR_UPDT_DTIME as timestamp,",
						"          EQCR_UPDT_EMP_NO as string,",
						"          EQCR_INTCOLOR_CODE as string,",
						"          EQCR_MAKER_CODE as string,",
						"          EQCR_INT_COLOR_CODE as string,",
						"          EQCR_QUOTED_PRICE as boolean,",
						"          EQCR_EXPECTED_PRICE as string,",
						"          EQCR_FUEL_TYPE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delta',",
						"     fileSystem: 'salescrm-sceqrytbcurrentpartition') ~> salesCRM",
						"SalesAftersales, salesCRM join(EQRY_DLR_NO == EQCR_DLR_NO,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          EQRY_DLR_NO as string,",
						"          EQRY_ENQRY_NO as string,",
						"          EQRY_CORP_NO as string,",
						"          EQRY_CMPN_NO as string,",
						"          EQRY_DATE as string,",
						"          EQRY_SRC_CODE as string,",
						"          EQRY_STAT as string,",
						"          EQRY_TYPE as string,",
						"          EQRY_FNCE_YN as string,",
						"          EQRY_FNCER_CODE as string,",
						"          EQRY_LOAN_AMT as string,",
						"          EQRY_TENOR_MNTHS as string,",
						"          EQRY_EXCHG_YN as string,",
						"          EQRY_EXCHG_MODEL_CODE as string,",
						"          EQRY_EXPCT_PRICE as string,",
						"          EQRY_QUOTD_PRICE as string,",
						"          EQRY_CLSE_DATE as string,",
						"          EQRY_CLSE_TYPE as string,",
						"          EQRY_CLSE_RMRKS as string,",
						"          EQRY_EMP_NO as string,",
						"          EQRY_CUST_NO as string,",
						"          EQRY_LISTD_CORP as string,",
						"          EQRY_CORP_NAME as string,",
						"          EQRY_CRTE_DTIME as string,",
						"          EQRY_CRTE_EMP_NO as string,",
						"          EQRY_UPDT_DTIME as string,",
						"          EQRY_UPDT_EMP_NO as string,",
						"          EQRY_EQFU_SEQ as string,",
						"          EQRY_SR_NUM as string,",
						"          EQRY_SR_TYPE as string,",
						"          EQRY_FLW_STATUS as string,",
						"          EQRY_ASSOCIATE_ID as string,",
						"          EQRY_RSO_ID as string,",
						"          EQRY_FUEL_TYPE as string,",
						"          EQRY_PRESENT_CAR_YN as string,",
						"          EQRY_MAKER_CODE as string,",
						"          EQRY_CUST_BLOCK as string,",
						"          EQRY_BULK_SALE as string,",
						"          EQRY_P_MODL_YEAR as string,",
						"          EQRY_CLS_VAL as string,",
						"          EQRY_NEWCAR_YN as string,",
						"          EQRY_FCALL_EMP_NO as string,",
						"          EQRY_CTGR_CODE as string,",
						"          EQRY_SUB_SRC_CODE as string,",
						"          EQRY_CLSE_GRP_TYPE as string,",
						"          EQRY_TDRIVE_RMRKS as string,",
						"          EQRY_VC_RMRKS as string,",
						"          EQRY_REQ_TYPE as string,",
						"          EQRY_SRC_FLG as string,",
						"          EQRY_SR_NUM_REAL as string,",
						"          EQRY_ENG_TYP as string,",
						"          EQRY_TRNSM_TYP as string,",
						"          EQCR_DLR_NO as string,",
						"          EQCR_ENQRY_NO as string,",
						"          EQCR_SEQ as string,",
						"          EQCR_CORP_NO as string,",
						"          EQCR_CMPN_NO as string,",
						"          EQCR_MODEL_CODE as string,",
						"          EQCR_VRNT_CODE as string,",
						"          EQCR_COLOR_CODE as string,",
						"          EQCR_QTY as string,",
						"          EQCR_CRTE_DTIME as string,",
						"          EQCR_CRTE_EMP_NO as string,",
						"          EQCR_UPDT_DTIME as string,",
						"          EQCR_UPDT_EMP_NO as string,",
						"          EQCR_INTCOLOR_CODE as string,",
						"          EQCR_MAKER_CODE as string,",
						"          EQCR_INT_COLOR_CODE as string,",
						"          EQCR_QUOTED_PRICE as string,",
						"          EQCR_EXPECTED_PRICE as string,",
						"          EQCR_FUEL_TYPE as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_logdetails')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Dummyfile",
								"type": "DatasetReference"
							},
							"name": "dummy"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_log",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     ADFName as string ($ADFName),",
						"     PipelineName as string ($PipelineName),",
						"     Status as string ($Status),",
						"     RunId as string ($RunId),",
						"     TriggerName as string ($TriggerName),",
						"     logFileName as string ($logFileName)",
						"}",
						"source(output(",
						"          Column_1 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> dummy",
						"dummy derive(ADFName = $ADFName,",
						"          PipelineName = $PipelineName,",
						"          Status = $Status,",
						"          RunId = $RunId,",
						"          TriggerName = $TriggerName) ~> derivedColumn1",
						"derivedColumn1 select(mapColumn(",
						"          ADFName,",
						"          PipelineName,",
						"          Status,",
						"          RunId,",
						"          TriggerName",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:[($logFileName)],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/salescrmdataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Sales_CRM_SCEQCR_TB",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "SecondAzureDataLakeStorageLinkServices",
								"type": "LinkedServiceReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "SecondAzureDataLakeStorageLinkServices",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          EQCR_DLR_NO as string,",
						"          EQCR_ENQRY_NO as string,",
						"          EQCR_SEQ as boolean,",
						"          EQCR_CORP_NO as string,",
						"          EQCR_CMPN_NO as string,",
						"          EQCR_MODEL_CODE as string,",
						"          EQCR_VRNT_CODE as double,",
						"          EQCR_COLOR_CODE as string,",
						"          EQCR_QTY as boolean,",
						"          EQCR_CRTE_DTIME as timestamp,",
						"          EQCR_CRTE_EMP_NO as string,",
						"          EQCR_UPDT_DTIME as timestamp,",
						"          EQCR_UPDT_EMP_NO as string,",
						"          EQCR_INTCOLOR_CODE as string,",
						"          EQCR_MAKER_CODE as string,",
						"          EQCR_INT_COLOR_CODE as string,",
						"          EQCR_QUOTED_PRICE as boolean,",
						"          EQCR_EXPECTED_PRICE as string,",
						"          EQCR_FUEL_TYPE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delta',",
						"     fileSystem: 'salescrm-sceqrytbcurrentpartition',",
						"     mergeSchema: false,",
						"     autoCompact: false,",
						"     optimizedWrite: false,",
						"     vacuum: 0,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PIPELINE_FOR_AUDIT_LOG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "logFileName",
							"value": {
								"value": "@concat(formatDateTime(utcNow(),'yyyy-MM-dd'),'_log.csv')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_logfile",
								"type": "DatasetReference",
								"parameters": {
									"logFileName": {
										"value": "@variables('logFileName')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get Metadata1').output.exists",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "df_logdetails",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_logdetails",
											"type": "DataFlowReference",
											"parameters": {
												"ADFName": {
													"value": "'@{pipeline().DataFactory}'",
													"type": "Expression"
												},
												"PipelineName": {
													"value": "'@{pipeline().Pipeline}'",
													"type": "Expression"
												},
												"Status": {
													"value": "'@{string('Sucess')}'",
													"type": "Expression"
												},
												"RunId": {
													"value": "'@{pipeline().RunId}'",
													"type": "Expression"
												},
												"TriggerName": {
													"value": "'@{pipeline().TriggerName}'",
													"type": "Expression"
												},
												"logFileName": {
													"value": "'@{variables('logFileName')}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"dummy": {},
												"sink1": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "df_logdetails_Append",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"logFileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-20T07:29:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_logdetails')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dumptodetla')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow3",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow3",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SalesAftersales": {},
									"salesCRM": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-20T07:29:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_current_partitioning')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ETLdataflow_current_partitioning",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ETLdataflow_current_partitioning",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-20T07:29:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ETLdataflow_current_partitioning')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_delta_to_sql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-20T07:29:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinedynamicrange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ETLdataflow_Hash_Dynamic_Range",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ETLdataflow_Hash_Dynamic_Range",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-13T09:04:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ETLdataflow_Hash_Dynamic_Range')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineforroundrobin')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ETLdataflow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ETLdataflow_round_robin",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-20T07:29:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ETLdataflow_round_robin')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineforsql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ETLdataflow_trials",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ETLdataflow_trials",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-20T07:29:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ETLdataflow_trials')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinehash')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ETLdataflow_Hash",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ETLdataflow_Hash",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-13T09:00:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ETLdataflow_Hash')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinekey')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ETLdataflow_key",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ETLdataflow_key",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-20T07:29:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ETLdataflow_key')]"
			]
		}
	]
}